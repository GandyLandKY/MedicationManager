# name: C++ Build

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build:
#     runs-on: windows-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Configure CMake
#       run: cmake -S . -B build
#     - name: Build
#       run: cmake --build build
    
name: CI & Deploy

on:
  push:
    branches:
      - '**'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build on Windows
    runs-on: windows-latest

    steps:
      - name: 🛎 Checkout code
        uses: actions/checkout@v3

      - name: 🎯 Setup CMake
        # switch to the ‘latest’ tag (v4.x.x under the hood)
        uses: lukka/get-cmake@latest  # :contentReference[oaicite:0]{index=0}
        with:
          cmakeVersion: '3.27.5'      # pin or remove as desired

      - name: ⚙️ Configure
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

      - name: 🛠 Build
        run: cmake --build build --config Release

      - name: 📦 Upload build artifact
        uses: actions/upload-artifact@v4  # bump to v4 to avoid deprecation error :contentReference[oaicite:1]{index=1}
        with:
          name: MedicationManager-exe
          path: build/Release/MedicationManager.exe

  # deploy:
  #   name: Deploy to Production VM
  #   needs: build
  #   runs-on: [self-hosted, Production]
  #   continue-on-error: true
  #   environment: Production  # manual approval button

  #   steps:
  #     - name: 📥 Download build artifact
  #       uses: actions/download-artifact@v4  # match upload version :contentReference[oaicite:2]{index=2}
  #       with:
  #         name: MedicationManager-exe

  #     - name: 🚚 Copy to target directory
  #       run: |
  #         $dest = 'C:\Apps\MedicationManager'
  #         if (-not (Test-Path $dest)) {
  #           New-Item -ItemType Directory -Path $dest | Out-Null
  #         }
  #         Move-Item MedicationManager.exe $dest -Force

  #     - name: ✔️ Verify deployment
  #       run: |
  #         Write-Host "Deployed files to $dest:"
  #         Get-ChildItem $dest
