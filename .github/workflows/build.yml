name: CI & Deploy

on:
  push:
    branches:
      - '**'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build on Windows
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup CMake
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: '3.27.5'

      - name: Configure
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --config Release

      - name: Upload C++ EXE Artifact
        uses: actions/upload-artifact@v4
        with:
          name: MedicationManager-exe
          path: |
            build/Release/MedicationManager.exe
            data.json

      - name: Run C++ Tests
        run: |
          cd build
          ctest -C Release --output-on-failure

      # ---------------------------
      # ELECTRON BUILD STEPS BEGIN
      # ---------------------------

      - name: Copy EXE into Electron App
        run: |
          copy build/Release/MedicationManager.exe electron/app/

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Electron Dependencies
        working-directory: electron
        run: npm install

      - name: Package Electron App
        working-directory: electron
        run: |
          npx electron-packager . MedicationManager --platform=win32 --arch=x64 --out=dist

      - name: Upload Packaged Electron App
        uses: actions/upload-artifact@v4
        with:
          name: MedicationManager-Electron-Windows
          path: electron/dist

  deploy-development:
    name: Deploy to Development
    needs: build
    runs-on: [self-hosted,Windows,MedicationManager,Dev]
    environment: Development

    steps:
      - name: Download C++ EXE Artifact
        uses: actions/download-artifact@v4
        with:
          name: MedicationManager-exe
          path: app

      - name: Download Electron App Artifact
        uses: actions/download-artifact@v4
        with:
          name: MedicationManager-Electron-Windows
          path: electron

      - name: Backup existing application
        shell: pwsh
        run: |
          $source = 'C:\Apps'
          $backup = 'C:\AppsBackup'
          if (!(Test-Path $backup)) {
            New-Item -Path $backup -ItemType Directory | Out-Null
          }
          robocopy $source $backup /MIR

      - name: Clean target directory
        shell: pwsh
        run: |
          Remove-Item -Path 'C:\Apps\*' -Recurse -Force

      - name: Deploy application files
        shell: pwsh
        run: |
          Copy-Item -Path 'app\*' -Destination 'C:\Apps' -Recurse -Force
          Copy-Item -Path 'electron\dist\MedicationManager-win32-x64\*' -Destination 'C:\Apps' -Recurse -Force

  deploy-production:
    name: Deploy to Production
    needs: deploy-development
    runs-on: [self-hosted,Windows,MedicationManager,Prod]
    environment: Production

    steps:
      - name: Download C++ EXE Artifact
        uses: actions/download-artifact@v4
        with:
          name: MedicationManager-exe
          path: app

      - name: Download Electron App Artifact
        uses: actions/download-artifact@v4
        with:
          name: MedicationManager-Electron-Windows
          path: electron

      - name: Backup existing application
        shell: pwsh
        run: |
          $source = 'C:\Apps'
          $backup = 'C:\AppsBackup'
          if (!(Test-Path $backup)) {
            New-Item -Path $backup -ItemType Directory | Out-Null
          }
          robocopy $source $backup /MIR

      - name: Clean target directory
        shell: pwsh
        run: |
          Remove-Item -Path 'C:\Apps\*' -Recurse -Force

      - name: Deploy application files
        shell: pwsh
        run: |
          Copy-Item -Path 'app\*' -Destination 'C:\Apps' -Recurse -Force
          Copy-Item -Path 'electron\dist\MedicationManager-win32-x64\*' -Destination 'C:\Apps' -Recurse -Force
